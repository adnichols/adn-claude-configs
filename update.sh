#!/bin/bash

# Update script for syncing latest configurations from adn-claude-configs
# Usage: bash /path/to/adn-claude-configs/update.sh [target-directory]

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$SCRIPT_DIR"
TARGET_DIR="${1:-.}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ADN Claude Configs - Update Script${NC}"
echo -e "${BLUE}===================================${NC}"
echo ""

# Detect which tools are installed
CLAUDE_INSTALLED=false
CODEX_INSTALLED=false

if [ -d "$TARGET_DIR/.claude" ]; then
    CLAUDE_INSTALLED=true
    echo -e "${GREEN}✓ Detected Claude Code installation${NC}"
fi

if [ -d "$TARGET_DIR/.codex" ]; then
    CODEX_INSTALLED=true
    echo -e "${GREEN}✓ Detected Codex installation${NC}"
fi

if [ "$CLAUDE_INSTALLED" = false ] && [ "$CODEX_INSTALLED" = false ]; then
    echo -e "${RED}Error: No Claude Code or Codex installations found in $TARGET_DIR${NC}"
    echo ""
    echo "Run the install script first:"
    echo "  bash $REPO_ROOT/install.sh --all"
    exit 1
fi

echo ""

update_claude() {
    local target="$1/.claude"

    echo -e "${BLUE}Updating Claude Code configuration...${NC}"

    # Update agents
    echo "  - Updating agents..."
    rm -rf "$target/agents"
    cp -r "$REPO_ROOT/claude/agents" "$target/"

    # Update commands
    echo "  - Updating commands..."
    rm -rf "$target/commands"
    cp -r "$REPO_ROOT/claude/commands" "$target/"

    # Update scripts
    echo "  - Updating scripts..."
    rm -rf "$target/scripts"
    cp -r "$REPO_ROOT/claude/scripts" "$target/"

    # Preserve existing settings.local.json
    if [ -f "$target/settings.local.json" ]; then
        echo -e "  ${YELLOW}✓ Preserved existing settings.local.json${NC}"
    else
        echo "  - Installing settings.local.json..."
        cp "$REPO_ROOT/claude/settings.local.json" "$target/"
    fi

    # Update MCP servers configuration (always update)
    echo "  - Updating mcp-servers.json..."
    cp "$REPO_ROOT/claude/mcp-servers.json" "$target/"

    # Skip CLAUDE.md
    echo -e "  ${YELLOW}✓ Skipped CLAUDE.md (generated by codex)${NC}"

    echo -e "${GREEN}✓ Claude Code update complete${NC}"
}

update_codex() {
    local target="$1/.codex"

    echo -e "${BLUE}Updating Codex configuration...${NC}"

    # Update prompts
    echo "  - Updating prompts..."
    rm -rf "$target/prompts"
    cp -r "$REPO_ROOT/codex/prompts" "$target/"

    # Update scripts
    echo "  - Updating scripts..."
    rm -rf "$target/scripts"
    cp -r "$REPO_ROOT/codex/scripts" "$target/"

    # Preserve existing config.toml
    if [ -f "$target/config.toml" ]; then
        echo -e "  ${YELLOW}✓ Preserved existing config.toml${NC}"
        echo "  ${YELLOW}  Review $REPO_ROOT/codex/config.toml for new settings${NC}"
    else
        echo "  - Installing config.toml..."
        cp "$REPO_ROOT/codex/config.toml" "$target/"
    fi

    # Update MCP servers configuration (always update)
    echo "  - Updating mcp-servers.toml..."
    cp "$REPO_ROOT/codex/mcp-servers.toml" "$target/"

    # Skip AGENTS.md
    echo -e "  ${YELLOW}✓ Skipped AGENTS.md (generated by codex)${NC}"

    echo -e "${GREEN}✓ Codex update complete${NC}"
}

# Perform updates
if [ "$CLAUDE_INSTALLED" = true ]; then
    update_claude "$TARGET_DIR"
    echo ""
fi

if [ "$CODEX_INSTALLED" = true ]; then
    update_codex "$TARGET_DIR"
    echo ""
fi

echo -e "${GREEN}All updates complete!${NC}"
echo ""
echo "Changes applied:"
echo "  ✓ Agents/Commands/Prompts updated to latest versions"
echo "  ✓ Scripts synchronized"
echo "  ✓ MCP server configurations updated"
echo "  ✓ Local settings preserved"
echo ""
echo "Note: Review your settings files if new configuration options were added."
